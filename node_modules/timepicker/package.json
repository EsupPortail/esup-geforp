{
  "_args": [
    [
      {
        "raw": "timepicker@git://github.com/jonthornton/jquery-timepicker.git#5de5fcd16f8476f6a0a8d5dc89e6f3f209a85d10",
        "scope": null,
        "escapedName": "timepicker",
        "name": "timepicker",
        "rawSpec": "git://github.com/jonthornton/jquery-timepicker.git#5de5fcd16f8476f6a0a8d5dc89e6f3f209a85d10",
        "spec": "git://github.com/jonthornton/jquery-timepicker.git#5de5fcd16f8476f6a0a8d5dc89e6f3f209a85d10",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:jonthornton/jquery-timepicker.git#5de5fcd16f8476f6a0a8d5dc89e6f3f209a85d10",
          "sshUrl": "git+ssh://git@github.com/jonthornton/jquery-timepicker.git#5de5fcd16f8476f6a0a8d5dc89e6f3f209a85d10",
          "httpsUrl": "git+https://github.com/jonthornton/jquery-timepicker.git#5de5fcd16f8476f6a0a8d5dc89e6f3f209a85d10",
          "gitUrl": "git://github.com/jonthornton/jquery-timepicker.git#5de5fcd16f8476f6a0a8d5dc89e6f3f209a85d10",
          "shortcut": "github:jonthornton/jquery-timepicker#5de5fcd16f8476f6a0a8d5dc89e6f3f209a85d10",
          "directUrl": "https://raw.githubusercontent.com/jonthornton/jquery-timepicker/5de5fcd16f8476f6a0a8d5dc89e6f3f209a85d10/package.json"
        }
      },
      "/var/www/sygefor"
    ]
  ],
  "_from": "git://github.com/jonthornton/jquery-timepicker.git#1.11.1",
  "_id": "timepicker@1.11.1",
  "_inCache": true,
  "_location": "/timepicker",
  "_phantomChildren": {},
  "_requested": {
    "raw": "timepicker@git://github.com/jonthornton/jquery-timepicker.git#5de5fcd16f8476f6a0a8d5dc89e6f3f209a85d10",
    "scope": null,
    "escapedName": "timepicker",
    "name": "timepicker",
    "rawSpec": "git://github.com/jonthornton/jquery-timepicker.git#5de5fcd16f8476f6a0a8d5dc89e6f3f209a85d10",
    "spec": "git://github.com/jonthornton/jquery-timepicker.git#5de5fcd16f8476f6a0a8d5dc89e6f3f209a85d10",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:jonthornton/jquery-timepicker.git#5de5fcd16f8476f6a0a8d5dc89e6f3f209a85d10",
      "sshUrl": "git+ssh://git@github.com/jonthornton/jquery-timepicker.git#5de5fcd16f8476f6a0a8d5dc89e6f3f209a85d10",
      "httpsUrl": "git+https://github.com/jonthornton/jquery-timepicker.git#5de5fcd16f8476f6a0a8d5dc89e6f3f209a85d10",
      "gitUrl": "git://github.com/jonthornton/jquery-timepicker.git#5de5fcd16f8476f6a0a8d5dc89e6f3f209a85d10",
      "shortcut": "github:jonthornton/jquery-timepicker#5de5fcd16f8476f6a0a8d5dc89e6f3f209a85d10",
      "directUrl": "https://raw.githubusercontent.com/jonthornton/jquery-timepicker/5de5fcd16f8476f6a0a8d5dc89e6f3f209a85d10/package.json"
    }
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git://github.com/jonthornton/jquery-timepicker.git#5de5fcd16f8476f6a0a8d5dc89e6f3f209a85d10",
  "_shasum": "79f692d7adfa1f41049163e20f1685dc24c019e1",
  "_shrinkwrap": null,
  "_spec": "timepicker@git://github.com/jonthornton/jquery-timepicker.git#5de5fcd16f8476f6a0a8d5dc89e6f3f209a85d10",
  "_where": "/var/www/sygefor",
  "author": {
    "name": "Jon Thornton",
    "url": "https://github.com/jonthornton"
  },
  "bugs": {
    "url": "https://github.com/jonthornton/jquery-timepicker/issues"
  },
  "dependencies": {
    "jquery": ">=1.7"
  },
  "description": "A jQuery timepicker plugin inspired by Google Calendar. It supports both mouse and keyboard navigation.",
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-cli": "~0.1.9",
    "grunt-contrib-cssmin": "~0.4.1",
    "grunt-contrib-jshint": "^0.11.3",
    "grunt-contrib-uglify": "~0.11.0"
  },
  "gitHead": "5de5fcd16f8476f6a0a8d5dc89e6f3f209a85d10",
  "homepage": "http://jonthornton.github.com/jquery-timepicker/",
  "keywords": [
    "timepicker",
    "time",
    "picker",
    "ui",
    "google calendar"
  ],
  "license": "MIT",
  "main": "jquery.timepicker.min.js",
  "name": "timepicker",
  "optionalDependencies": {},
  "readme": "Timepicker Plugin for jQuery\n========================\n\n[<img src=\"http://jonthornton.github.com/jquery-timepicker/lib/screenshot.png\" alt=\"timepicker screenshot\" />](http://jonthornton.github.com/jquery-timepicker)\n\n[See a demo and examples here](http://jonthornton.github.com/jquery-timepicker)\n\njquery.timepicker is a lightweight timepicker plugin for jQuery inspired by Google Calendar. It supports both mouse and keyboard navigation, and weighs in at 2.7kb minified and gzipped.\n\nRequirements\n------------\n* [jQuery](http://jquery.com/) (>= 1.7)\n\nUsage\n-----\n\n```javascript\n$('.some-time-inputs').timepicker(options);\n```\n\nInclude `jquery.timepicker.css` and `jquery.timepicker.min.js` in your page.\n\n```options``` is an optional javascript object with parameters explained below.\n\nYou can also set options as [data attributes](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Using_data_attributes) on the intput elements, like ```<input type=\"text\" data-time-format=\"H:i:s\" />```. Timepicker still needs to be initialized by calling ```$('#someElement').timepicker();```.\n\nThe defaults for all options are exposed through the ```$.fn.timepicker.defaults``` object. Properties changed in this object (same properties configurable through the constructor) will take effect for every instance created after the change.\n\nOptions\n-------\n\n- **appendTo**  \nOverride where the dropdown is appended.  \nTakes either a `string` to use as a selector, a `function` that gets passed the clicked input element as argument or a jquery `object` to use directly.  \n*default: \"body\"*\n\n- **className**  \nA class name to apply to the HTML element that contains the timepicker dropdown.  \n*default: null*\n\n- **closeOnWindowScroll**  \nClose the timepicker when the window is scrolled. (Replicates ```<select>``` behavior.)  \n*default: false*\n\n- **disableTimeRanges**  \nDisable selection of certain time ranges. Input is an array of time pairs, like ```[['3:00am', '4:30am'], ['5:00pm', '8:00pm']]``. The start of the interval will be disabled but the end won't.\n*default: []*\n\n- **disableTextInput**  \nDisable typing in the timepicker input box; force users to select from list. [More information here.](https://github.com/jonthornton/jquery-timepicker/issues/425#issuecomment-133262458)  \n*default: false*\n\n- **disableTouchKeyboard**  \nDisable the onscreen keyboard for touch devices. There can be instances where Firefox or Chrome have touch events enabled (such as on Surface tablets but not actually be a touch device. In this case `disableTouchKeyboard` will prevent the timepicker input field from being focused. [More information here.](https://github.com/jonthornton/jquery-timepicker/issues/413)  \n*default: false*\n\n- **durationTime**  \nThe time against which ```showDuration``` will compute relative times. If this is a function, its result will be used.  \n*default: minTime*\n\n- **forceRoundTime**  \nForce update the time to ```step``` settings as soon as it loses focus.  \n*default: false*\n\n- **lang**  \nLanguage constants used in the timepicker. Can override the defaults by passing an object with one or more of the following properties: decimal, mins, hr, hrs.  \n*default:* ```{\n\tam: 'am',\n\tpm: 'pm',\n\tAM: 'AM',\n\tPM: 'PM',\n\tdecimal: '.',\n\tmins: 'mins',\n\thr: 'hr',\n\thrs: 'hrs'\n}```\n\n- **maxTime**  \nThe time that should appear last in the dropdown list. Can be used to limit the range of time options.  \n*default: 24 hours after minTime*\n\n- **minTime**  \nThe time that should appear first in the dropdown list.  \n*default: 12:00am*\n\n- **noneOption**  \nAdds one or more custom options to the top of the dropdown. Can accept several different value types:  \nBoolean (```true```): Adds a \"None\" option that results in an empty input value  \nString: Adds an option with a custom label that results in an empty input value  \nObject: Similar to string, but allows customizing the element's class name and the resulting input value. Can contain ```label```, ```value```, and ```className``` properties. ```value``` must be a string type.  \nArray: An array of strings or objects to add multiple non-time options  \n*default: false*\n\n- **orientation**  \nBy default the timepicker dropdown will be aligned to the bottom right of the input element, or aligned to the top left if there isn't enough room below the input. Force alignment with `l` (left), `r` (right), `t` (top), and `b` (bottom). Examples: `tl`, `rb`.\n*default: 'l'*\n\n- **roundingFunction**  \nFunction used to compute rounded times. The function will receive time in seconds and a settings object as arguments. The function should handle a null value for seconds.\n*default: round to nearest step*\n\n- **scrollDefault**  \nIf no time value is selected, set the dropdown scroll position to show the time provided, e.g. \"09:00\". A time string, Date object, or integer (seconds past midnight) is acceptible, as well as the string `'now'`.   \n*default: null*\n\n- **selectOnBlur**  \nUpdate the input with the currently highlighted time value when the timepicker loses focus.  \n*default: false*\n\n- **show2400**  \nShow \"24:00\" as an option when using 24-hour time format.  \n*default: false*\n\n- **showDuration**  \nShows the relative time for each item in the dropdown. ```minTime``` or ```durationTime``` must be set.  \n*default: false*\n\n- **showOn**  \nDisplay a timepicker dropdown when the input fires a particular event. Set to null or an empty array to disable automatic display. Setting should be an array of strings.\n*default: ['focus']*\n\n- **showOnFocus**  \nDEPRECATED: Display a timepicker dropdown when the input gains focus.  \n*default: true*\n\n- **step**  \nThe amount of time, in minutes, between each item in the dropdown. Alternately, you can specify a function to generate steps dynamically. The function will receive a count integer (0, 1, 2...) and is expected to return a step integer.  \n*default: 30*\n\n- **stopScrollPropagation**  \nWhen scrolling on the edge of the picker, it prevent parent containers (<body>) to scroll.\n*default: false*\n\n- **timeFormat**  \nHow times should be displayed in the list and input element. Uses [PHP's date() formatting syntax](http://php.net/manual/en/function.date.php). Characters can be escaped with a preceeding double slash (e.g. `H\\\\hi`). Alternatively, you can specify a function instead of a string, to use completely custom time formatting. In this case, the format function receives a Date object and is expected to return a formatted time as a string.\n*default: 'g:ia'*\n\n- **typeaheadHighlight**  \nHighlight the nearest corresponding time option as a value is typed into the form input.  \n*default: true*\n\n- **useSelect**  \nConvert the input to an HTML `<SELECT>` control. This is ideal for small screen devices, or if you want to prevent the user from entering arbitrary values. This option is not compatible with the following options: ```appendTo```, ```closeOnWindowScroll```, ```disableTouchKeyboard```, ```forceRoundTime```, ```scrollDefault```, ```selectOnBlur```, ```typeAheadHighlight```.  \n*default: false*\n\n- **wrapHours**  \nIf a time greater than 24 hours (27:30, for example) is entered, apply modolo 24 to create a valid time. Setting this to `false` will cause an input of 27:30 to result in a `timeFormatError` event.  \n*default: true*\n\nMethods\n-------\n\n- **getSecondsFromMidnight**  \nGet the time as an integer, expressed as seconds from 12am.\n\n\t```javascript\n\t$('#getTimeExample').timepicker('getSecondsFromMidnight');\n\t```\n\n- **getTime**  \nGet the time using a Javascript Date object, relative to a Date object (default: today's date).\n\n\t```javascript\n\t$('#getTimeExample').timepicker('getTime');\n\t$('#getTimeExample').timepicker('getTime', new Date());\n\t```\n\n\tYou can get the time as a string using jQuery's built-in ```val()``` function:\n\n\t```javascript\n\t$('#getTimeExample').val();\n\t```\n\n- **hide**  \nClose the timepicker dropdown.\n\n\t```javascript\n\t$('#hideExample').timepicker('hide');\n\t```\n\n- **isVisible**  \nCheck if the timepicker attached to *a specific input* is visible. Not compatible with the `useSelect` option.\n\n\t```javascript\n\t$('#hideExample').timepicker('isVisible');\n\t```\n\n- **option**  \nChange the settings of an existing timepicker. Calling ```option``` on a visible timepicker will cause the picker to be hidden.\n\n\t```javascript\n\t$('#optionExample').timepicker({ 'timeFormat': 'g:ia' }); // initialize the timepicker sometime earlier in your code\n\t...\n\t$('#optionExample').timepicker('option', 'minTime', '2:00am');\n\t$('#optionExample').timepicker('option', { 'minTime': '4:00am', 'timeFormat': 'H:i' });\n\t```\n\n- **remove**  \nUnbind an existing timepicker element.\n\n\t```javascript\n\t$('#removeExample').timepicker('remove');\n\t```\n\n- **setTime**  \nSet the time using a Javascript Date object.\n\n\t```javascript\n\t$('#setTimeExample').timepicker('setTime', new Date());\n\t```\n\n- **show**  \nDisplay the timepicker dropdown.\n\n\t```javascript\n\t$('#showExample').timepicker('show');\n\t```\n\nEvents\n------\n\n- **change**  \nThe native ```onChange``` event will fire any time the input value is updated, whether by selection from the timepicker list or manual entry into the text input. Your code should bind to ```change``` after initializing timepicker, or use [event delegation](http://api.jquery.com/on/).\n\n- **changeTime**  \nCalled after a valid time value is entered or selected. See ```timeFormatError``` and ```timeRangeError``` for error events. Fires before ```change``` event.\n\n- **hideTimepicker**  \nCalled after the timepicker is closed.\n\n- **selectTime**  \nCalled after a time value is selected from the timepicker list. Fires before ```change``` event.\n\n- **showTimepicker**  \nCalled after the timepicker is shown.\n\n- **timeFormatError**  \nCalled if an unparseable time string is manually entered into the timepicker input. Fires before ```change``` event.\n\n- **timeRangeError**  \nCalled if a maxTime, minTime, or disableTimeRanges is set and an invalid time is manually entered into the timepicker input. Fires before ```change``` event.\n\nThe `selectTime` and `hideTimepicker` events fire slightly differently when using the `useSelect` option. See https://github.com/jonthornton/jquery-timepicker/issues/427 for more information.\n\nTheming\n-------\n\nSample markup with class names:\n\n```html\n<input value=\"5:00pm\" class=\"ui-timepicker-input\" type=\"text\">\n...\n<div class=\"ui-timepicker-wrapper ui-timepicker-positioned-top optional-custom-classname\" tabindex=\"-1\">\n\t<ul class=\"ui-timepicker-list\">\n\t\t<li class=\"ui-timepicker-am\">12:00am</li>\n\t\t<li class=\"ui-timepicker-am\">12:30am</li>\n\t\t...\n\t\t<li class=\"ui-timepicker-pm\">4:30pm</li>\n\t\t<li class=\"ui-timepicker-pm ui-timepicker-selected\">5:00pm</li>\n\t\t<li class=\"ui-timepicker-pm ui-timepicker-disabled\">5:30pm</li>\n\t\t<li class=\"ui-timepicker-pm\">6:00pm <span class=\"ui-timepicker-duration\">(1 hour)</span></li>\n\t\t<li class=\"ui-timepicker-pm\">6:30pm</li>\n\t\t...\n\t\t<li class=\"ui-timepicker-pm\">11:30pm</li>\n\t</ul>\n</div>\n```\n\nThe `ui-timepicker-positioned-top` class will be applied only when the dropdown is positioned above the input.\n\n## Packaging\n\nInstall from [Bower](http://bower.io/) as ```jquery-timepicker-jt```.\n\nAn AngularJS directive is available at https://github.com/Recras/angular-jquery-timepicker\n\nAvailable via CDN at [https://cdnjs.com/libraries/jquery-timepicker](https://cdnjs.com/libraries/jquery-timepicker).\n\nHelp\n----\n\nSubmit a [GitHub Issues request](https://github.com/jonthornton/jquery-timepicker/issues/new). Please try provide code that demonstrates the problem; you can use [this jsFiddle](http://jsfiddle.net/jonthornton/28uvg/) as a starting point.\n\nDevelopment guidelines\n----------------------\n\n1. Install dependencies (jquery + grunt) `npm install`\n2. For sanity checks and minification run `grunt`, or just `grunt lint` to have the code linted\n \njquery-timepicker follows [semantic versioning](http://semver.org/).\n\n- - -\n\nThis software is made available under the open source MIT License. &copy; 2014 [Jon Thornton](http://www.jonthornton.com) and [contributors](https://github.com/jonthornton/jquery-timepicker/graphs/contributors)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jonthornton/jquery-timepicker.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "title": "jquery-timepicker",
  "version": "1.11.1"
}
